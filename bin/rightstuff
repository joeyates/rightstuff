#!/usr/bin/env ruby

require 'rubygems' if RUBY_VERSION < '1.9'
require 'optparse'
ROOT_PATH = File.dirname( File.dirname( File.expand_path( __FILE__ ) ) )
LIB_PATH  = File.join( ROOT_PATH, 'lib' )
$:.unshift( LIB_PATH )
require 'rightstuff'

include Rightstuff::Credentials

options = {
  :credentials_subkey => nil,
  :all                => false
}

OptionParser.new do | opts |
  opts.banner = "Usage: #{ $0 } [options] ACTION"

  opts.on( "-a", "--all", "Include all items" ) do | subkey |
    options[ :all ] = true
  end

  opts.on( "-k", "--credentials-subkey=SUBKEY", "The subkey of the ~/.rightstuff file to use for authentication" ) do | subkey |
    options[ :credentials_subkey ] = subkey.intern
  end
end.parse!

def extract_credentials( subkey )
  data = rightscale_data
  key = if subkey
          unless data.has_key?( subkey )
            raise "Your credentials file does not have a subkey '#{ subkey }'"
          end
          data[ subkey ]
        else
          data
        end
  unless key.has_key?( :credentials )
    raise "No :credentials data found in your ~/.rightstuff file"
  end
  key[ :credentials ]
end

credentials = extract_credentials( options[ :credentials_subkey ] )
client      = Rightstuff::Client.new( credentials )
action      = ARGV.pop

case action
when 'servers'
  servers = client.servers
  servers.reject!{ | server | server.attributes[ :state ] != 'operational' }
  puts servers.map{ | server | server.attributes[ :nickname ] }.join( "\n" )
when 'server_arrays'
  server_arrays = client.server_arrays
  puts server_arrays.map{ | server_array | server_array.attributes[ :nickname ] }.join( "\n" )
when nil
  raise 'No action supplied'
else
  raise "Unknown action '#{ ARGV[ 0 ] }'"
end
